Design Thoughts:
- Item: a discrete thing to be brought on a trip
- Item Categories: general item classification (e.g. clothing, climbing gear, overnight gear)
  - Think of this as the logical grouping you'd use when laying everything out to pack.
  - Each item is associated with *one* category.
- Trip Parameters: parameters of a trip (e.g. activities, conditions, length of outing)
 - Each item can be associated with many trip parameters.
- We utilize "Save" buttons whenever editing primitives to provide a logical place for validation.
- Activities with a "Save" button do not have knowledge of global state and just create an object.

TODO:
- List of all trip parameters from main page; link to edit
- Trip parameters!
 - select parameters when create packing list
 - pre-populate packing list with all items with the selected parameters
- Edit packing lists
- Ability to export/import data as json
 ==========
- Get rid of UUIDs in favor of just using names?
- Consistent data syncing strategy (e.g. items added to/removed from trip parameter)
- Add (uniquely named) item categories
- Display items based on category
- Drag and drop to re-order items in a packing list
- Reconsider how to uncheck items without cycling through un-added - e.g. oops clicked wrong thing but have filter on - long-press to reverse?
- Add existing item to list without having to edit trip parameters
  - completion suggestions on item name; if user selects one or types existing name ask, load remaining details for that item?
- Populate missing UID from stored data (e.g. if hand-edited)
- Ability to share lists
- Standardize naming (e.g. buttons, codes, ids - camelCase vs snake_case?)
- Enhance logging
- Testing
- Documentation
- Address all warnings